{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","providers/UsdPriceProvider.js","providers/Hooks.js","providers/web3ProvideSwitcher.js","providers/DrizzleProvider.js","providers/TokenIdContext.js","lib/ipfs.js","components/UploadImage.js","components/common/TxTemplate.js","components/common/ModalTemplate.js","components/UpdateModal.js","components/BuyModal.js","components/Image.js","components/Example.js","Template.js","wrapper/Offline.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","UsdPriceContext","createContext","getEtherUsdPrice","a","fetch","json","ETHUSD","hasOwnProperty","parseFloat","result","XETHZUSD","c","UsdPriceProvider","children","useState","etherUsdPrice","setEtherUsdPrice","useEffect","then","timer","setInterval","newEtherUsdPrice","clearInterval","Provider","value","useDrizzleState","drizzleReactHooks","useDrizzle","useCurrentUser","state","accounts","useUsdEthPrice","useContext","useTotalPatronageForTokenWei","tokenId","useCacheCall","totalCollectedOpt","call","patronageOwedOpt","BN","add","toString","useTotalPatronageForTokenEth","totPatranageWei","fromWei","useTotalPatronageForTokenUsd","totPatranageEth","usdEthPrice","toFixed","useDepositAbleToWithdrawWei","useDepositAbleToWithdrawEth","depositToWithdraw","useDepositAbleToWithdrawUsd","depositeAbleToWithdrawEth","useForeclosureTime","foreclosureTimestamp","moment","useTokenHash","useTokenUrl","useCurrentPriceWei","useCurrentPriceEth","useCurrentPriceUsd","currentPriceEth","useCurrentPatron","genericTransaction","contractId","functionName","useCacheSend","send","TXObjects","useBuyTransaction","useChangeImage","useChangePrice","getInjectedWeb3NoLoad","window","ethereum","addListener","web3","currentProvider","Web3","providers","WebsocketProvider","error","provider","Web3ProviderSwitcher","instance","this","Proxy","get","obj","prop","fallbackUrl","switchableWeb3","web3ProvideSwitcher","createSwitchableWeb3","options","block","fallback","type","url","customProvider","contracts","VitalikSteward","ERC721Full","syncAlways","polls","ProviderContext","theme","rimbleTheme","colors","primary","drizzleStore","generateStore","drizzle","Drizzle","isProviderSelected","setIsProviderSelected","providedValues","setProvider","console","log","setExternalProvider","DrizzleProvider","TokenIdContext","useTokenId","TokenIdProvider","createBoundary","data","boundary","Math","random","indexOf","sendAsync","opts","cb","request","XMLHttpRequest","Promise","reject","callback","r","onreadystatechange","readyState","timeout","status","responseText","jsonParse","JSON","parse","jsonError","payload","open","accept","setRequestHeader","err","input","name","queryParams","isBuffer","uri","takeHash","pin","ipfsHash","UploadProgress","image","uploadProgress","progress","done","pinned","progPercent","ipfsDagSize","Fragment","Processing","my","message","UploadImage","updateImageHashOnSmartContract","size","currentImage","setCurrentImage","progressRef","useRef","h3","current","className","onChange","evt","reader","FileReader","file","target","files","ipfsApproxDagSize","onload","upload","Buffer","from","Hash","readAsDataURL","encType","required","txObjects","length","color","confirmations","href","receipt","txHashtransactionHash","isOpen","onClose","width","p","Text","icononly","icon","position","top","right","mt","mr","onClick","modalStates","modalState","setModalState","priceInput","setPriceInput","changeImage","changeImageTxObjects","changePrice","changePriceTxObjects","style","mainColor","ModalTemplate","TxTemplate","mb","placeholder","event","newPriceFloat","newPrice","isNaN","ml","priceForTx","utils","toWei","hash","showModal","depositInput","setDepositInput","currentPrice","buy","buyTxObjects","newDepositFloat","newDeposit","depositAmount","transactionAmount","displayWeb3Actions","imageData","setImageData","imageHash","adLink","isCurrentPatron","currentPatron","currentUser","toUpperCase","useIsCurrentPatron","text","dataString","includes","src","backgroundColor","UpdateModal","BuyModal","totalRaisedToken0","totalRaisedToken1","totalRaisedToken2","totalRaisedToken0Eth","totalRaisedToken1Eth","totalRaisedToken2Eth","totalRaisedToken0Usd","totalRaisedToken1Usd","totalRaisedToken2Usd","depositAbleToWithdraw0","depositAbleToWithdraw1","depositAbleToWithdraw2","depositAbleToWithdraw0Eth","depositAbleToWithdraw1Eth","depositAbleToWithdraw2Eth","depositAbleToWithdraw0Usd","depositAbleToWithdraw1Usd","depositAbleToWithdraw2Usd","currentPrice0","currentPrice1","currentPrice2","currentPrice0Eth","currentPrice1Eth","currentPrice2Eth","currentPrice0Usd","currentPrice1Usd","currentPrice2Usd","foreclosureTime0","foreclosureTime1","foreclosureTime2","hash0","hash1","hash2","url0","url1","url2","currentPatron0","currentPatron1","currentPatron2","format","setDisplayWeb3Actions","onToggle","Button","providerOptions","portis","network","fortmatic","key","onConnect","map","i","data-href","data-layout","data-size","data-show-count","overflow","maxHeight","Example","AlternateLoader","web3Status","vitalikStewardInitialized","initialized","erc721FullInitialized","allContractsLoaded","Children","only","App","Offline","Template","drizzleLoaded","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9af5f593.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 338;","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const UsdPriceContext = createContext('')\n\nexport const getEtherUsdPrice = async () => {\n  // fetch exchange rate.\n  // https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\n  const ETHUSD = await (await fetch('https://api.kraken.com/0/public/Ticker?pair=ETHUSD')).json()\n  if (ETHUSD.hasOwnProperty('result')) {\n    return parseFloat(ETHUSD.result.XETHZUSD.c[0])\n  } else {\n    return null\n  }\n}\n\n\n// NOTE: not sure what is wrong with the bellow code, it definitely is more elegant, but there are errors sadly...\nexport const UsdPriceProvider = ({ children }) => {\n  const [etherUsdPrice, setEtherUsdPrice] = useState(-1)\n\n  useEffect(() => {\n    // if the price has never been set, try to set it immediately\n    if (etherUsdPrice < 0) {\n      getEtherUsdPrice().then(setEtherUsdPrice)\n    }\n\n    const timer = setInterval(async () => {\n      const newEtherUsdPrice = await getEtherUsdPrice()\n      setEtherUsdPrice(newEtherUsdPrice)\n    }, 1500)\n    return () => clearInterval(timer)\n  }, [etherUsdPrice])\n\n  return <UsdPriceContext.Provider value={etherUsdPrice}>\n    {children}\n  </UsdPriceContext.Provider>\n}\nUsdPriceProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport const useUsdEthPrice = () => useContext(UsdPriceContext)\n\nexport default UsdPriceProvider\n","import { drizzleReactHooks } from 'drizzle-react'\nimport BN from 'bn.js'\nimport { fromWei } from 'web3-utils'\nimport { useUsdEthPrice as useUsdEthPriceOrig } from './UsdPriceProvider'\nimport moment from 'moment'\n\nconst {\n  useDrizzleState,\n  useDrizzle,\n} = drizzleReactHooks\n\nexport const useCurrentUser =\n  () => {\n    const state = useDrizzleState(state => state.accounts);\n    return state[0];\n  };\n\nexport const useUsdEthPrice = useUsdEthPriceOrig\nexport const useTotalPatronageForTokenWei = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  // try { // TODO: should have some error handling here, but react didn't like it (no conditionals around hooks)\n  const totalCollectedOpt =\n    useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'totalCollected', tokenId))\n  const patronageOwedOpt =\n    useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'patronageOwed', tokenId))\n\n  if (!!totalCollectedOpt && !!patronageOwedOpt) {\n    return (new BN(totalCollectedOpt)).add(new BN(patronageOwedOpt)).toString()\n  } else {\n    return null\n  }\n  // } catch (e) {\n  //   console.error('This is a friendly (friendlier) error message from Jason. You cannot call this function until drizzle is completely initialized and has loaded all the contracts.', e)\n  // }\n}\n\nexport const useTotalPatronageForTokenEth = (tokenId) => {\n  const totPatranageWei = useTotalPatronageForTokenWei(tokenId)\n  return (!!totPatranageWei) ? fromWei(totPatranageWei, 'ether') : null\n}\nexport const useTotalPatronageForTokenUsd = (tokenId) => {\n  const totPatranageEth = useTotalPatronageForTokenEth(tokenId)\n  const usdEthPrice = useUsdEthPrice()\n  return (!!totPatranageEth && !!usdEthPrice) ?\n    (usdEthPrice * parseFloat(totPatranageEth)).toFixed(2)\n    : null\n}\n\nexport const useAreContractsLoaded = () => {\n  return useDrizzleState(({\n    web3: { status: web3Status },\n    contracts: {\n      VitalikSteward: { initialized: vitalikStewardInitialized },\n      ERC721Full: { initialized: erc721FullInitialized }\n    }\n  }) => ({\n    web3Status,\n    erc721FullInitialized,\n    vitalikStewardInitialized,\n    allContractsLoaded: vitalikStewardInitialized && erc721FullInitialized\n  }))\n}\n\nexport const useDepositAbleToWithdrawWei = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  // TODO: should have some error handling here, but react didn't like it (no conditionals around hooks)\n  return useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'depositAbleToWithdraw', tokenId))\n}\n\nexport const useDepositAbleToWithdrawEth = (tokenId) => {\n  const depositToWithdraw = useDepositAbleToWithdrawWei(tokenId)\n  return (!!depositToWithdraw) ? fromWei(depositToWithdraw, 'ether') : null\n}\n\nexport const useDepositAbleToWithdrawUsd = (tokenId) => {\n  const depositeAbleToWithdrawEth = useDepositAbleToWithdrawEth(tokenId);\n  const usdEthPrice = useUsdEthPrice();\n  return (!!depositeAbleToWithdrawEth && !!usdEthPrice) ?\n    (usdEthPrice * parseFloat(depositeAbleToWithdrawEth)).toFixed(2)\n    : null\n};\n\n// TODO: maybe using the 'moment.js' library would be beneficial here!\nexport const useForeclosureTime = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  const foreclosureTimestamp = useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'foreclosureTime', tokenId))\n  return (!!foreclosureTimestamp) ? moment(foreclosureTimestamp, 'X') : null\n}\n\nexport const useTokenHash = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  return useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'hashes', tokenId))\n}\n\nexport const useTokenUrl = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  return useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'urls', tokenId))\n}\n\nexport const useCurrentPriceWei = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  return useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'price', tokenId))\n}\nexport const useCurrentPriceEth = (tokenId) => {\n  const depositToWithdraw = useCurrentPriceWei(tokenId)\n  return (!!depositToWithdraw) ? fromWei(depositToWithdraw, 'ether') : null\n}\n\nexport const useCurrentPriceUsd = (tokenId) => {\n  const currentPriceEth = useCurrentPriceEth(tokenId);\n  const usdEthPrice = useUsdEthPrice();\n  return (!!currentPriceEth && !!usdEthPrice) ?\n    (usdEthPrice * parseFloat(currentPriceEth)).toFixed(2)\n    : null\n}\n\nexport const useCurrentPatron = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  return useCacheCall(['ERC721Full'], call => call('ERC721Full', 'ownerOf', tokenId))\n}\n\nexport const useIsCurrentPatron = (tokenId) => {\n  const currentPatron = useCurrentPatron(tokenId)\n  const currentUser = useCurrentUser()\n  return !!currentPatron && !!currentUser && currentPatron.toUpperCase() === currentUser.toUpperCase()\n}\n// TODO: get `useTotalTimeHeld` working\n// const useTotalTimeHeld = (addressOfUser) =>\n//       const currentTimeHeld = parseInt(this.getTimeHeld(props, timeHeldKey)) + (parseInt(date.getTime()/1000) - parseInt(this.getTimeAcquired(props))\n\nconst useAvailableDeposit = (tokenId) => {\n  const { useCacheCall } = useDrizzle()\n  return useCacheCall(['VitalikSteward'], call => call('VitalikSteward', 'availableDeposit', tokenId))\n}\n\n// // const useBuyTransaction: unit => string => = (newPriceInEther: string) =>\n// //   (useCacheSend())(. 'VitalikSteward', 'buy', newPriceInEther);\n// const useBuyTransaction = () => (useCacheSend())(.'VitalikSteward', 'buy');\nexport const genericTransaction = (contractId, functionName) => tokenId => {\n  const { useCacheSend } = useDrizzle()\n  const { send, TXObjects } = useCacheSend(contractId, functionName)\n  return { TXObjects, send }\n}\n\nexport const useBuyTransaction = genericTransaction('VitalikSteward', 'buy')\nexport const useChangeImage = genericTransaction('VitalikSteward', 'changeImage')\nexport const useChangeUrl = genericTransaction('VitalikSteward', 'changeUrl')\nexport const useWithdrawDeposit = genericTransaction('VitalikSteward', 'withdrawDeposit')\nexport const useChangePrice = genericTransaction('VitalikSteward', 'changePrice')\nexport const useDepositWei = genericTransaction('VitalikSteward', 'depositWei')\nexport const useExit = genericTransaction('VitalikSteward', 'exit')\nexport const useTransferAssetTokenTo = genericTransaction('VitalikSteward', 'transferAssetTokenTo')\n","import Web3 from \"web3\"\n\nconst getInjectedWeb3NoLoad = () => {\n  if (!!window.ethereum.addListener) {\n    const { ethereum } = window\n    return ethereum\n  } else if (typeof (window).web3 !== 'undefined') {\n    const { currentProvider } = (window).web3.currentProvider\n    return currentProvider\n  }\n  try {\n    const provider = new Web3.providers.WebsocketProvider(\n      \"wss://mainnet.infura.io/ws/v3/a5d64a2052ab4d1da240cdfe3a6c519b\"\n    )\n    return provider\n  } catch (error) {\n    // Out of web3 options; throw.\n    throw new Error('Cannot find injected web3 or valid fallback.')\n  }\n}\nclass Web3ProviderSwitcher {\n\n  static instance\n  provider = null\n\n  constructor() {\n    if (Web3ProviderSwitcher.instance) { return Web3ProviderSwitcher.instance }\n    Web3ProviderSwitcher.instance = this\n    this.provider = getInjectedWeb3NoLoad()\n  }\n\n  async setExternalProvider(provider) {\n    this.provider = provider\n  }\n\n  createSwitchableWeb3() {\n    const web3RequestHandler = {\n      get: (obj, prop) =>\n        this.provider[prop]\n    }\n\n    return new Proxy({}, web3RequestHandler)\n  }\n}\n\nexport default new Web3ProviderSwitcher()\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { drizzleReactHooks } from \"drizzle-react\"\nimport { Drizzle, generateStore } from \"drizzle\"\nimport { theme as rimbleTheme } from 'rimble-ui'\nimport { ThemeProvider } from 'styled-components'\nimport VitalikSteward from \"../contracts/VitalikSteward.json\"\nimport ERC721Full from \"../contracts/ERC721Full.json\"\nimport web3ProvideSwitcher from \"./web3ProvideSwitcher\"\n\nconst fallbackUrl = \"wss://mainnet.infura.io/ws/v3/a5d64a2052ab4d1da240cdfe3a6c519b\";\nconst switchableWeb3 = web3ProvideSwitcher.createSwitchableWeb3()\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: fallbackUrl,\n    },\n    customProvider: switchableWeb3,\n    // Repeating this because there seems to be some kind of bug somewhere where web3.web3 is used instead\n    web3: {\n      block: false,\n      fallback: {\n        type: \"ws\",\n        url: fallbackUrl,\n      },\n      customProvider: switchableWeb3,\n    },\n  },\n  contracts: [\n    VitalikSteward,\n    ERC721Full\n  ],\n  syncAlways: true,\n  polls: {\n    accounts: 1500,\n  },\n};\n\n// export default ({ children }) =>\n// <DrizzleProvider options={options}>{children}</DrizzleProvider>\n\n\n// // todo: read env var for fallback\n// const fallbackUrl = \"wss://mainnet.infura.io/ws/v3/e811479f4c414e219e7673b6671c2aba\"\n// const switchableWeb3 = web3ProvideSwitcher.createSwitchableWeb3()\nconst ProviderContext = createContext('');\nconst theme = {\n  ...rimbleTheme,\n  colors: {\n    ...rimbleTheme.colors,\n    primary: 'rgb(107, 173, 62)', // This is the primary green used by wildcards theme\n  }\n}\n\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nexport default ({ children }) => {\n  const [isProviderSelected, setIsProviderSelected] = useState(false)\n  const setProvider = (provider) => {\n    console.log(provider)\n    web3ProvideSwitcher.setExternalProvider(provider)\n    setIsProviderSelected(true)\n    console.log(isProviderSelected)\n  }\n\n  // fetching: false,\n  // address: '',\n  // web3: null,\n  // connected: false,\n  // chainId: 1,\n  // networkId: 1,\n  // assets: [],\n  // showModal: false,\n  // pendingRequest: false,\n  // result: null\n\n  const resetApp = () => {\n    console.log('reset the app')\n  }\n\n  const providedValues = { isProviderSelected, setProvider }\n\n  return (\n    <drizzleReactHooks.DrizzleProvider drizzle={drizzle}>\n      <ProviderContext.Provider value={providedValues}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </ProviderContext.Provider>\n    </drizzleReactHooks.DrizzleProvider>\n  )\n}\n\nexport const useWeb3Setup = () => useContext(ProviderContext);\n\n","import React, { createContext, useContext, useState, useEffect } from 'react'\n\nexport const TokenIdContext = createContext('')\n\nexport const TokenIdProvider = ({ children, tokenId }) => {\n  return <TokenIdContext.Provider value={tokenId}>\n    {children}\n  </TokenIdContext.Provider>\n}\n\nexport const useTokenId = () => useContext(TokenIdContext)\n\nexport const connectTokenId = (WrappedComponent) => {\n  return (props) => {\n    const tokenId = useTokenId()\n    const newProps = { ...props, tokenId }\n    return <WrappedComponent {...newProps} />\n  }\n}\n\nexport default TokenIdProvider\n","function createBoundary(data) {\n  while (true) {\n    var boundary = `----IPFSMini${Math.random() * 100000}.${Math.random() * 100000}`;\n    if (data.indexOf(boundary) === -1) {\n      console.log('not sure why this occurred...')\n      return boundary;\n    }\n    return boundary\n  }\n}\n\n// copy pasted from here:\nconst sendAsync = function sendAsync(opts, cb) {\n  var request = new XMLHttpRequest(); // eslint-disable-line\n  var options = opts || {};\n\n  return new Promise(function (resolve, reject) {\n    function callback(e, r) {\n      // console.log(e, r)\n      // cb(e, r);\n      if (e) return reject(e);\n      if (!e && r) return resolve(r);\n    };\n\n    request.onreadystatechange = function () {\n      if (request.readyState === 4 && request.timeout !== 1) {\n        if (request.status !== 200) {\n          callback(new Error(`[custom-ipfs] status ${request.status}: ${request.responseText}`), null);\n        } else {\n          try {\n            callback(null, (options.jsonParse ? JSON.parse(request.responseText) : request.responseText));\n          } catch (jsonError) {\n            callback(new Error(`error`, null));\n          }\n        }\n      }\n    };\n\n    try {\n      var pinningURI = '?pin=false' // hardcoded for now\n\n      if (options.payload) {\n        request.open('POST', `${'https://ipfs.infura.io:5001/api/v0/add'}${pinningURI}`);\n      } else {\n        request.open('GET', `${'https://ipfs.infura.io:5001/api/v0/add'}${pinningURI}`);\n      }\n\n      if (options.accept) {\n        request.setRequestHeader('accept', options.accept);\n      }\n\n      if (options.payload && options.boundary) {\n        request.setRequestHeader('Content-Type', `multipart/form-data; boundary=${options.boundary}`);\n        request.send(options.payload);\n      } else {\n        request.send();\n      }\n    } catch (err) {\n      callback(err, null);\n    }\n  });\n};\n\nexport const add = async (input, name, queryParams) => {\n  var data = ((typeof input === 'object' && input.isBuffer) ? input.toString('binary') : input);\n  var boundary = createBoundary(data);\n  var payload = `--${boundary}\\r\\nContent-Disposition: form-data; name=\"path\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n${data}\\r\\n--${boundary}--`;\n\n  // return fetch('https://ipfs.infura.io:5001/api/v0/add' + queryParams, {\n  //   method: 'POST',\n  //   headers: {\n  //     'Accept': 'application/json',\n  //     'Content-Type': 'multipart/form-data; boundary=${boundary}'\n  //   },\n  //   body: payload,\n  // })\n  //   .then(r => r.json())\n  //   .then(data => data)\n  return await sendAsync({\n    jsonParse: true,\n    accept: 'application/json',\n    uri: '/add',\n    takeHash: true,\n    payload, boundary,\n  });\n};\n\nexport const pin = (ipfsHash) => fetch(\n  'https://ipfs.infura.io:5001/api/v0/pin/add?arg=/ipfs/' + ipfsHash\n)\n  .then(r => r.json())\n  .then(data => data)\n\nexport const cat = (ipfsHash) => fetch(\n  'https://ipfs.infura.io:5001/api/v0/cat?arg=' + ipfsHash\n)\n  .then(r => r.text())\n  .then(data => data)\n\n","import React, { useState, useRef } from 'react';\nimport { Buffer } from 'buffer'\nimport { ToastMessage, Progress } from 'rimble-ui'\nimport { Heading, Text, } from 'rimble-ui'\nimport { add, pin } from '../lib/ipfs';\n\nconst UploadProgress = ({ image, uploadProgress: { progress, done, pinned } }) => {\n  const progPercent = (progress / image.ipfsDagSize) * 100\n  return <div>\n    {done ?\n      pinned ?\n        <React.Fragment>\n          <h1>Image is pinned to IPFS</h1>\n          <p>When the Ethereum transaction goes through your image should appear in its spot.</p>\n        </React.Fragment>\n        :\n        <React.Fragment>\n          <h1>Uploaded</h1>\n          <p>The data is on IPFS, but we are currently 'pinning' the data to make it last forever.</p>\n          <p>In the meantime you can add the IPFS hash to the smart contract.</p>\n        </React.Fragment>\n      :\n      <div>\n        {progPercent < 98 /*98 is a random number it must jus be quite high so this condition only triggers when waiting for ipfs at the end */ ?\n          <div>\n            <ToastMessage.Processing my={0} message={\"Sending to IPFS\"} />\n          </div>\n          :\n          <div>\n            <ToastMessage.Processing my={0} message={\"Verifying upload on IPFS\"} />\n            <p>Please be patient, decentralisation is still a bit slow unfortunately.</p>\n          </div>\n        }\n      </div>\n    }\n  </div>\n}\n\nconst UploadImage = ({ updateImageHashOnSmartContract }) => {\n\n  const [currentImage, setCurrentImage] = useState({ data: null, name: null, size: 0, ipfsDagSize: 0 })\n  const progressRef = useRef({ progress: 0, done: false })\n\n  const handleChangeImage = (evt) => {\n    var reader = new FileReader();\n    var file = evt.target.files[0];\n    const size = file.size\n    const name = file.name\n    const ipfsApproxDagSize = size * 1.335 // NOTE: This is a rough, and slight over estimate, will need to be calculated to be precise.\n\n\n    reader.onload = async (upload) => {\n      const data = upload.target.result\n      setCurrentImage({ data, size, ipfsDagSize: ipfsApproxDagSize })\n      // Set the progress to 100% for now since the code for the progress updates isn't working nicely.\n      //    See the 'NOTE' a few lines down. - When that is added, this line can be removed\n      progressRef.current = { progress: ipfsApproxDagSize, done: false }\n\n      // NOTE: this code gets the hash of the data without any network activity\n      // const multihashing = require('multihashing-async')\n      // const digest = await multihashing.digest(buf, 'sha1')\n      // const dataHash = await new Promise(\n      //   (resolve, reject) => multihashing(\n      //     Buffer.from(data),\n      //     'sha1',\n      //     (err, result) =>\n      //       resolve(\n      //         result.toString('hex')\n      //       )\n      //   )\n      // )\n      // NOTE: this method isn't supported by infura, but it would be useful to see if the file already exists on IPFS\n      // const getNumberOfProviders = await window.ipfsNode.dht.findProvs(dataHash, { timeout: 1000, maxNumProviders: 2 })\n\n      // console.log(data)\n      const result = await add(Buffer.from(data), name, '?pin=false')\n      // const result = await window.ipfsNode.add(\n      //   Buffer.from(data),\n      //   {\n      //     // // NOTE: this was removed because it was giving problems with infura (it would hang)\n      //     // progress: progress =>\n      //     //   progressRef.current = { progress, done: false },\n      //     pin: false, // Note: if all were good in the world this would be true, problem is that this is extremely slow and not user friendly!\n      //   },\n      // )\n      const ipfsHash = result.Hash\n      progressRef.current = { progress: ipfsApproxDagSize, done: true, ipfsHash, pinned: false }\n      updateImageHashOnSmartContract(ipfsHash)\n      // Try to pin the hash in the background!\n      const pinResult = await pin(ipfsHash)\n      progressRef.current = { progress: ipfsApproxDagSize, done: true, ipfsHash, pinned: true }\n    };\n    reader.readAsDataURL(file);\n  }\n\n  return (\n    <div>\n      <Heading.h3>Upload Image</Heading.h3>\n\n      {(!!currentImage.data) ?\n        <UploadProgress image={currentImage} uploadProgress={progressRef.current}></UploadProgress>\n        :\n        <React.Fragment>\n          <Text>\n            We recommend an optimal image dimesions of 300 x 300 pixels\n          </Text>\n          <input\n            type=\"file\" name=\"file\"\n            className=\"upload-file\"\n            id=\"file\"\n            onChange={handleChangeImage}\n            encType=\"multipart/form-data\"\n            required\n          />\n        </React.Fragment>\n      }\n    </div>\n  )\n}\n\nexport default UploadImage\n","import React, { Fragment, useState } from 'react';\nimport { Button, Modal, Card, Box, Heading, Text, Flex, Loader, Input, Radio } from 'rimble-ui'\n\nexport default ({ txObjects, children }) => txObjects.length > 0 ?\n  <Fragment>\n    <Heading.h3>Processing Transaction</Heading.h3>\n    {\n      !!txObjects[0] ?\n        <Fragment>\n          {(() => {\n            switch (txObjects[0].status) {\n              case 'pending':\n                return <Fragment>\n                  <Text>The transaction was is being processed.</Text>\n                  <Loader color='red' size='80px' />\n                </Fragment>\n              case 'error':\n                return <Text>The transaction was failed, please try again.</Text>\n              case 'success':\n                return <Fragment>\n                  <Text>The transaction was successful.</Text>\n                  <Text>It has been confirmed {txObjects[0].confirmations.length}.</Text>\n                  <Text>\n                    <a href={'https://etherscan.io/tx/' + txObjects[0].receipt.txHashtransactionHash} target='_blank'>View transaction on Ethersan</a>\n                  </Text>\n                </Fragment>\n            }\n          })()}\n        </Fragment>\n        :\n        <Fragment>\n          <Text>Sending transaction to signer.</Text>\n          <Loader color='red' size='80px' />\n        </Fragment>\n    }\n  </Fragment>\n  :\n  <Fragment>\n    {children}\n  </Fragment>\n","import React from 'react'\nimport { Button, Modal, Card } from 'rimble-ui'\n\nexport default ({ isOpen, onClose, children }) =>\n  <Modal isOpen={isOpen}>\n    <Card width={'420px'} p={0}>\n      <Button.Text\n        icononly\n        icon={'Close'}\n        color={'moon-gray'}\n        position={'absolute'}\n        top={0}\n        right={0}\n        mt={3}\n        mr={3}\n        onClick={onClose}\n      />\n      {children}\n    </Card>\n  </Modal>\n","import React, { useState } from 'react'\nimport { Button, Box, Input } from 'rimble-ui'\nimport UploadImage from './UploadImage'\nimport { useChangeImage, useChangePrice, useChangeUrl } from '../providers/Hooks'\nimport { useTokenId } from '../providers/TokenIdContext'\nimport TxTemplate from './common/TxTemplate'\nimport ModalTemplate from './common/ModalTemplate'\nimport Web3 from 'web3'\n\nconst modalStates = {\n  UPDATE_PRICE: 'update-price',\n  CHANGE_DEPOSIT: 'change-deposit',\n  UPLOAD_IMAGE: 'upload-image',\n  CHANGE_URL: 'change-url',\n}\n\nexport default () => {\n  const [modalState, setModalState] = useState('')\n  const [priceInput, setPriceInput] = useState(0)\n  const tokenId = useTokenId()\n  const { send: changeImage, TXObjects: changeImageTxObjects } = useChangeImage()\n  const { send: changePrice, TXObjects: changePriceTxObjects } = useChangePrice()\n  // const { send: changeUrl, TXObjects: changeUrlTxObjects } = useChangeUrl()\n\n  return <React.Fragment>\n    <Button style={{ width: '100%' }} mainColor='#7A7A7A' size='small' onClick={() => setModalState(modalStates.UPDATE_PRICE)} > Update Price</Button>\n    &ensp;\n    <Button style={{ width: '100%' }} mainColor='#7A7A7A' size='small' onClick={() => setModalState(modalStates.CHANGE_DEPOSIT)} > Add/Remove Deposit</Button>\n    &ensp;\n    <Button style={{ width: '100%' }} mainColor='#7A7A7A' size='small' onClick={() => setModalState(modalStates.UPLOAD_IMAGE)} > Upload Image</Button>\n    &ensp;\n    <Button style={{ width: '100%' }} mainColor='#7A7A7A' size='small' onClick={() => setModalState(modalStates.CHANGE_URL)} > Update Website</Button>\n    <ModalTemplate\n      isOpen={modalState === modalStates.UPDATE_PRICE}\n      onClose={() => setModalState('')}\n    >\n      <TxTemplate txObjects={changePriceTxObjects}>\n        <Box p={4} mb={3}>\n          <Input\n            type='number'\n            value={priceInput}\n            placeholder={`Price`}\n            onChange={event => {\n              const newPriceFloat = parseFloat(event.target.value) // convert to float for safety\n              const newPrice = isNaN(newPriceFloat) || (newPriceFloat < 0) ? priceInput : newPriceFloat // make sure value is positive and valid\n              setPriceInput(newPrice)\n            }}\n            style={{ width: '100%' }}\n          />\n          <br />\n          <Button\n            mainColor='#7A7A7A' size=\"small\"\n            ml={3}\n            onClick={() => {\n              const priceForTx = Web3.utils.toWei(priceInput.toString(), 'ether') // convert value to WEI\n              changePrice(tokenId, priceForTx)\n            }}\n          >Update</Button>\n        </Box>\n      </TxTemplate>\n    </ModalTemplate>\n    <ModalTemplate\n      isOpen={modalState === modalStates.UPLOAD_IMAGE}\n      onClose={() => setModalState('')}\n    >\n      <TxTemplate txObjects={changeImageTxObjects}>\n        <Box p={4} mb={3}>\n          <form className='pure-form pure-form-stacked'>\n            <UploadImage updateImageHashOnSmartContract={hash => changeImage(tokenId, hash)} />\n            <br />\n          </form>\n        </Box>\n      </TxTemplate>\n    </ModalTemplate>\n  </React.Fragment >\n}\n","import React, { useState } from 'react'\nimport { Button, Box, Input } from 'rimble-ui'\nimport BN from 'bn.js'\nimport { useCurrentPriceWei, useBuyTransaction } from '../providers/Hooks'\nimport { useTokenId } from '../providers/TokenIdContext'\nimport TxTemplate from './common/TxTemplate'\nimport ModalTemplate from './common/ModalTemplate'\nimport Web3 from 'web3'\n\n\nexport default () => {\n  const [showModal, setModalState] = useState(false)\n  const [priceInput, setPriceInput] = useState(0)\n  const [depositInput, setDepositInput] = useState(0)\n  const tokenId = useTokenId()\n  const currentPrice = useCurrentPriceWei(tokenId)\n  const { send: buy, TXObjects: buyTxObjects } = useBuyTransaction()\n\n  return <React.Fragment>\n    <Button style={{ width: '100%' }} mainColor='#7A7A7A' size='small' onClick={() => setModalState(true)} > Buy </Button>\n\n    <ModalTemplate\n      isOpen={showModal}\n      onClose={() => setModalState(false)}\n    >\n      <TxTemplate txObjects={buyTxObjects}>\n        <Box p={4} mb={3}>\n          <p>New selling price:</p>\n          <Input\n            type='number'\n            value={priceInput}\n            placeholder={`Price`}\n            onChange={event => {\n              const newPriceFloat = parseFloat(event.target.value) // convert to float for safety\n              const newPrice = isNaN(newPriceFloat) || (newPriceFloat < 0) ? priceInput : newPriceFloat // make sure value is positive and valid\n              setPriceInput(newPrice)\n            }}\n            style={{ width: '100%' }}\n          />\n          <p>Deposit:</p>\n          <Input\n            type='number'\n            value={depositInput}\n            placeholder={`Deposit`}\n            onChange={event => {\n              const newDepositFloat = parseFloat(event.target.value) // convert to float for safety\n              const newDeposit = isNaN(newDepositFloat) || (newDepositFloat < 0) ? depositInput : newDepositFloat // make sure value is positive and valid\n              setDepositInput(newDeposit)\n            }}\n            style={{ width: '100%' }}\n          />\n          <br />\n          <Button\n            mainColor='#7A7A7A' size=\"small\"\n            ml={3}\n            onClick={() => {\n              const depositAmount = Web3.utils.toWei(depositInput.toString(), 'ether') // convert value to WEI\n              const transactionAmount = new BN(depositAmount).add(new BN(currentPrice)) // Get transaction Value (deposit + current price)\n              const newPrice = Web3.utils.toWei(priceInput.toString(), 'ether') // convert value to WEI\n              buy(tokenId, newPrice, { value: transactionAmount })\n            }}\n          >Buy</Button>\n        </Box>\n      </TxTemplate>\n    </ModalTemplate>\n  </React.Fragment >\n}\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { useTokenId } from '../providers/TokenIdContext';\nimport { useTokenHash, useTokenUrl, useIsCurrentPatron } from '../providers/Hooks';\nimport { cat } from '../lib/ipfs';\nimport UpdateModal from './UpdateModal';\nimport BuyModal from './BuyModal';\n\nexport default ({ displayWeb3Actions }) => {\n  const [imageData, setImageData] = useState('')\n  const tokenId = useTokenId()\n  const imageHash = useTokenHash(tokenId)\n  const adLink = useTokenUrl(tokenId)\n  const isCurrentPatron = useIsCurrentPatron(tokenId)\n\n  // Load the imageData\n  useEffect(() => {\n    if (!!imageHash) {\n      cat(imageHash).then(data => {\n        const dataString = data.toString()\n        if (dataString.includes('data')) {\n          setImageData(dataString)\n        } else {\n          // TODO: Show some kind of error to the user that the image is corrupt/wrong format\n        }\n      })\n    }\n  }, [imageHash])\n\n  return <Fragment>\n    <div className='image-container'>\n      <a href={`${adLink | ''}?ref=alwaysforsale`}>\n        {(!!imageData && imageData !== '') ?\n          <img\n            src={imageData}\n            style={{ width: '100%' }}\n          />\n          :\n          <div\n            style={{ width: '100%' }}\n          >\n            <p style={{ backgroundColor: 'white' }}>Loading the image...</p>\n            {/* <img\n        src={window.rootCdnUrl + tokenId}\n        style={{ width: '100%' }}\n      ></img> */}\n          </div>\n        }\n      </a>\n      {!!displayWeb3Actions && (\n        <div className='interaction-button-container'>\n          <div className='interaction-buttons'>\n            {isCurrentPatron ? (\n              <div>\n                <Fragment>\n                  <p>You own this token</p>\n                  <UpdateModal />\n                  {/* <TokenOverview /> */}\n                </Fragment>\n              </div>\n            ) : (\n                <div>\n                  <p>You DON'T own this token</p>\n                  <BuyModal />\n                  {/* <BuyModal />\n                    <TokenOverview /> */}\n                </div>\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  </Fragment>\n}\n","import React from \"react\";\nimport {\n  useCurrentUser,\n  useTotalPatronageForTokenWei,\n  useTotalPatronageForTokenEth,\n  useUsdEthPrice,\n  useTotalPatronageForTokenUsd,\n  useDepositAbleToWithdrawWei,\n  useDepositAbleToWithdrawEth,\n  useDepositAbleToWithdrawUsd,\n  useForeclosureTime,\n  useCurrentPriceWei,\n  useCurrentPriceEth,\n  useCurrentPriceUsd,\n  useCurrentPatron,\n  useTokenHash,\n  useTokenUrl,\n} from '../providers/Hooks'\n\nexport default () => {\n  const currentUser = useCurrentUser()\n\n  const usdEthPrice = useUsdEthPrice()\n\n  const totalRaisedToken0 = useTotalPatronageForTokenWei(0)\n  const totalRaisedToken1 = useTotalPatronageForTokenWei(1)\n  const totalRaisedToken2 = useTotalPatronageForTokenWei(2)\n  const totalRaisedToken0Eth = useTotalPatronageForTokenEth(0)\n  const totalRaisedToken1Eth = useTotalPatronageForTokenEth(1)\n  const totalRaisedToken2Eth = useTotalPatronageForTokenEth(2)\n  const totalRaisedToken0Usd = useTotalPatronageForTokenUsd(0)\n  const totalRaisedToken1Usd = useTotalPatronageForTokenUsd(1)\n  const totalRaisedToken2Usd = useTotalPatronageForTokenUsd(2)\n\n  const depositAbleToWithdraw0 = useDepositAbleToWithdrawWei(0)\n  const depositAbleToWithdraw1 = useDepositAbleToWithdrawWei(1)\n  const depositAbleToWithdraw2 = useDepositAbleToWithdrawWei(2)\n  const depositAbleToWithdraw0Eth = useDepositAbleToWithdrawEth(0)\n  const depositAbleToWithdraw1Eth = useDepositAbleToWithdrawEth(1)\n  const depositAbleToWithdraw2Eth = useDepositAbleToWithdrawEth(2)\n  const depositAbleToWithdraw0Usd = useDepositAbleToWithdrawUsd(0)\n  const depositAbleToWithdraw1Usd = useDepositAbleToWithdrawUsd(1)\n  const depositAbleToWithdraw2Usd = useDepositAbleToWithdrawUsd(2)\n\n  const currentPrice0 = useCurrentPriceWei(0)\n  const currentPrice1 = useCurrentPriceWei(1)\n  const currentPrice2 = useCurrentPriceWei(2)\n  const currentPrice0Eth = useCurrentPriceEth(0)\n  const currentPrice1Eth = useCurrentPriceEth(1)\n  const currentPrice2Eth = useCurrentPriceEth(2)\n  const currentPrice0Usd = useCurrentPriceUsd(0)\n  const currentPrice1Usd = useCurrentPriceUsd(1)\n  const currentPrice2Usd = useCurrentPriceUsd(2)\n\n  const foreclosureTime0 = useForeclosureTime(0)\n  const foreclosureTime1 = useForeclosureTime(1)\n  const foreclosureTime2 = useForeclosureTime(2)\n\n  const hash0 = useTokenHash(0)\n  const hash1 = useTokenHash(1)\n  const hash2 = useTokenHash(2)\n\n  const url0 = useTokenUrl(0)\n  const url1 = useTokenUrl(1)\n  const url2 = useTokenUrl(2)\n\n  const currentPatron0 = useCurrentPatron(0)\n  const currentPatron1 = useCurrentPatron(1)\n  const currentPatron2 = useCurrentPatron(2)\n\n  console.log('re-render')\n\n  return <div>\n\n    <p>Current user: {currentUser}</p>\n\n    <p>Etherem/Usd price: {usdEthPrice} USD/ETH</p>\n\n    <p>Ad 1 has raised: {totalRaisedToken0} WEI</p>\n    <p>Ad 2 has raised: {totalRaisedToken1} WEI</p>\n    <p>Ad 3 has raised: {totalRaisedToken2} WEI</p>\n    <p>Ad 1 has raised: {totalRaisedToken0Eth} ETH</p>\n    <p>Ad 2 has raised: {totalRaisedToken1Eth} ETH</p>\n    <p>Ad 3 has raised: {totalRaisedToken2Eth} ETH</p>\n    <p>Ad 1 has raised: {totalRaisedToken0Usd} USD</p>\n    <p>Ad 2 has raised: {totalRaisedToken1Usd} USD</p>\n    <p>Ad 3 has raised: {totalRaisedToken2Usd} USD</p>\n\n    <p>Ad 1 has deposit available: {depositAbleToWithdraw0} WEI</p>\n    <p>Ad 2 has deposit available: {depositAbleToWithdraw1} WEI</p>\n    <p>Ad 3 has deposit available: {depositAbleToWithdraw2} WEI</p>\n    <p>Ad 1 has deposit available: {depositAbleToWithdraw0Eth} ETH</p>\n    <p>Ad 2 has deposit available: {depositAbleToWithdraw1Eth} ETH</p>\n    <p>Ad 3 has deposit available: {depositAbleToWithdraw2Eth} ETH</p>\n    <p>Ad 1 has deposit available: {depositAbleToWithdraw0Usd} USD</p>\n    <p>Ad 2 has deposit available: {depositAbleToWithdraw1Usd} USD</p>\n    <p>Ad 3 has deposit available: {depositAbleToWithdraw2Usd} USD</p>\n\n    <p>Ad 1 has current price: {currentPrice0} WEI</p>\n    <p>Ad 2 has current price: {currentPrice1} WEI</p>\n    <p>Ad 3 has current price: {currentPrice2} WEI</p>\n    <p>Ad 1 has current price: {currentPrice0Eth} ETH</p>\n    <p>Ad 2 has current price: {currentPrice1Eth} ETH</p>\n    <p>Ad 3 has current price: {currentPrice2Eth} ETH</p>\n    <p>Ad 1 has current price: {currentPrice0Usd} USD</p>\n    <p>Ad 2 has current price: {currentPrice1Usd} USD</p>\n    <p>Ad 3 has current price: {currentPrice2Usd} USD</p>\n\n    {(!!foreclosureTime0) && <p>Foreclosure time: {foreclosureTime0.format()}</p>}\n    {(!!foreclosureTime1) && <p>Foreclosure time: {foreclosureTime1.format()}</p>}\n    {(!!foreclosureTime2) && <p>Foreclosure time: {foreclosureTime2.format()}</p>}\n\n    <p>Ad 1 current hash: {hash0}</p>\n    <p>Ad 2 current hash: {hash1}</p>\n    <p>Ad 3 current hash: {hash2}</p>\n\n    <p>Ad 1 current url: {url0}</p>\n    <p>Ad 2 current url: {url1}</p>\n    <p>Ad 3 current url: {url2}</p>\n\n    <p>Ad 1 current patron: {currentPatron0}</p>\n    <p>Ad 2 current patron: {currentPatron1}</p>\n    <p>Ad 3 current patron: {currentPatron2}</p>\n  </div>\n}\n\n","import React, { useState } from \"react\"\nimport Web3Connect from \"web3connect\"\nimport {\n  useCurrentUser,\n  // useTotalPatronageForTokenWei,\n  // useTotalPatronageForTokenEth,\n  // useUsdEthPrice,\n  // useTotalPatronageForTokenUsd,\n  // useDepositAbleToWithdrawWei,\n  // useDepositAbleToWithdrawEth,\n  // useDepositAbleToWithdrawUsd,\n  // useForeclosureTime,\n  // useCurrentPriceWei,\n  // useCurrentPriceEth,\n  // useCurrentPriceUsd,\n  // useCurrentPatron,\n} from './providers/Hooks'\nimport { useWeb3Setup } from './providers/DrizzleProvider'\nimport ToggleButton from 'react-toggle-button'\nimport Dapp from './components/Image'\nimport TokenIdProvider from './providers/TokenIdContext'\nimport Example from './components/Example'\n\nexport default () => {\n  const [displayWeb3Actions, setDisplayWeb3Actions] = useState(false)\n  const { isProviderSelected, setProvider } = useWeb3Setup()\n  const currentUser = useCurrentUser()\n\n  return <React.Fragment >\n    <div>\n      <header>\n        {/* <ToastContainer /> */}\n        <h1>\n          These ads are always for sale, purchase the ad space and set your own monthly payment...\n            <br /> even make a profit when someone buys the ad space from you\n            </h1>\n        <React.Fragment>\n          {!isProviderSelected ?\n            <Web3Connect.Button\n              providerOptions={{\n                portis: {\n                  id: '104b9d07-25d3-4aeb-903b-ad7452218d05',\n                  network: \"mainnet\"\n                },\n                fortmatic: {\n                  key: 'pk_live_BE64CE1BB4A49C37',\n                  network: \"mainnet\"\n                }\n              }}\n              onConnect={setProvider}\n              onClose={() => {\n                console.log(\"Web3Connect Modal Closed\") // modal has closed\n              }}\n            /> :\n            <React.Fragment>\n              <p>You are logged in with: {currentUser}</p>\n              <ToggleButton\n                value={displayWeb3Actions}\n                onToggle={() => setDisplayWeb3Actions(!displayWeb3Actions)} />\n              <label>\n                <span style={{ color: 'white' }}>Click toggle to buy ad</span>\n              </label>\n            </React.Fragment>\n          }\n        </React.Fragment>\n\n      </header>\n\n      <div className=\"Grid\">\n        {/* <UsdPriceProvider> */}\n        {([0, 1, 2]).map(i => <div key={i} className=\"Grid-item\">\n          <TokenIdProvider tokenId={i}>\n            <Dapp displayWeb3Actions={displayWeb3Actions} />\n          </TokenIdProvider>\n        </div>)}\n        {/* </UsdPriceProvider> */}\n      </div>\n      <footer>\n        <div className='socials'>\n          <div\n            className='fb-share-button'\n            data-href='http://alwaysforsale.io'\n            data-layout='button'\n            data-size='small'\n          >\n            <a\n              target='_blank'\n              href='https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Falwaysforsale.io%2F&ampsrc=sdkpreparse'\n              className='fb-xfbml-parse-ignore'\n            >\n              Share\n              </a>\n          </div>\n          <div>\n            <a\n              href='https://twitter.com/intent/tweet?button_hashtag=Alwaysforsale.io&ref_src=twsrc%5Etfw'\n              className='twitter-hashtag-button'\n              data-show-count='false'\n            >\n              Tweet #Alwaysforsale\n              </a>\n          </div>\n        </div>\n        <div className='more-info'>\n          {/* <About /> */}\n          <br />\n          {/* <HowItWorks /> */}\n        </div>\n      </footer>\n      {/* <OfflineContainer alternateLoader={React.Fragment}>\n        <TotalRaised />\n      </OfflineContainer> */}\n    </div>\n    <div style={{ overflow: 'auto', maxHeight: 200 }}>\n      <Example />\n    </div>\n  </React.Fragment >\n}\n\n","import React, { Children } from \"react\"\nimport { useAreContractsLoaded } from \"../providers/Hooks\"\n\n\nexport default ({ AlternateLoader, children }) => {\n  const {\n    // vitalikStewardInitialized,\n    allContractsLoaded,\n    // erc721FullInitialized,\n    web3Status\n  } = useAreContractsLoaded()\n\n  if (allContractsLoaded && web3Status === 'initialized') {\n    return Children.only(children)\n  }\n\n  if (!!AlternateLoader) {\n    return <AlternateLoader />\n  }\n\n  if (web3Status === \"\") {\n    return (\n      <div className=\"section\">\n        Initializing connection to Ethereum\n      </div>\n    )\n  }\n\n\n  return (\n    <main className=\"container loading-screen\">\n      <div className=\"pure-g\">\n        <div className=\"pure-u-1-1\">\n          <h1>⚙️</h1>\n          <p>Loading dapp...</p>\n        </div>\n      </div>\n    </main>\n  )\n}\n","import React, { Component, Suspense } from \"react\";\nimport Template from \"./Template\"\nimport Offline from \"./wrapper/Offline\"\nimport DrizzleProvider from './providers/DrizzleProvider'\nimport UsdPriceProvider from \"./providers/UsdPriceProvider\"\n// const DrizzleProvider = React.lazy(() => import('./DrizzleProvider'));\nimport './app.css'\n\nclass App extends Component {\n  render() {\n    return (\n      // <Suspense fallback={<Template drizzleLoaded={false} />}> // TODO: use React.lazy to load drizzle lazily\n      <DrizzleProvider>\n        <UsdPriceProvider>\n          <Offline>\n            <Template drizzleLoaded={true} />\n          </Offline>\n        </UsdPriceProvider>\n      </DrizzleProvider>\n      // </Suspense>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}